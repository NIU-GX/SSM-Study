<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.example.bean.Employee">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="lastName" jdbcType="VARCHAR" property="lastname" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="gender" jdbcType="INTEGER" property="gender" />
        <result column="d_id" jdbcType="INTEGER" property="dId" />
    </resultMap>
    <resultMap id="WithDept" type="com.example.bean.Employee">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="lastName" jdbcType="VARCHAR" property="lastname" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="gender" jdbcType="INTEGER" property="gender" />
        <result column="d_id" jdbcType="INTEGER" property="dId" />
        <!-- 指定联合查询-->
        <association property="department" javaType="com.example.bean.Department">
            <id column="id" property="id"/>
            <result column="departmentName" property="departmentname"/>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, lastName, email, gender, d_id
    </sql>
    <sql id="WithDept_Column_List">
        e.id, e.lastName, e.email, e.gender, e.d_id, d.id, d.departmentname
    </sql>

    <!--List<Employee> selectByExampleWithDept(EmployeeExample example);
    Employee selectByPrimaryKeyWithDept(Integer id);-->

    <select id="selectByExampleWithDept" resultMap="WithDept">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="WithDept_Column_List" />
        FROM employee e
        LEFT JOIN department d on e.d_id = d.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKeyWithDept" resultMap="WithDept">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="WithDept_Column_List" />
        FROM employee e
        LEFT JOIN department d on e.d_id = d.id
        where e.id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByExample" parameterType="com.example.bean.EmployeeExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from employee
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from employee
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.bean.EmployeeExample">
        delete from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.bean.Employee">
        insert into employee (id, lastName, email,
                              gender, d_id)
        values (#{id,jdbcType=INTEGER}, #{lastname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
                #{gender,jdbcType=INTEGER}, #{dId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.example.bean.Employee">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="lastname != null">
                lastName,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="dId != null">
                d_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="lastname != null">
                #{lastname,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="dId != null">
                #{dId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.bean.EmployeeExample" resultType="java.lang.Long">
        select count(*) from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update employee
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.lastname != null">
                lastName = #{record.lastname,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=INTEGER},
            </if>
            <if test="record.dId != null">
                d_id = #{record.dId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update employee
        set id = #{record.id,jdbcType=INTEGER},
        lastName = #{record.lastname,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=INTEGER},
        d_id = #{record.dId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.bean.Employee">
        update employee
        <set>
            <if test="lastname != null">
                lastName = #{lastname,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="dId != null">
                d_id = #{dId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.bean.Employee">
        update employee
        set lastName = #{lastname,jdbcType=VARCHAR},
            email = #{email,jdbcType=VARCHAR},
            gender = #{gender,jdbcType=INTEGER},
            d_id = #{dId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>